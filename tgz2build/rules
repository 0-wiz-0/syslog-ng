#!/usr/bin/make -f
STAMPDIR=tgz2build/stamps
DOCDIR=$(PREFIX)/doc

CC:=gcc
CONFIGURE_OPTS := --prefix $(ZBS_PREFIX) --enable-ssl --enable-dynamic-linking --enable-sql \
	--enable-spoof-source --enable-pcre --disable-tcp-wrapper --with-ld-library-path=$(ZBS_PREFIX)/lib \
	--with-default-modules="affile,afprog,afsocket,afuser,basicfuncs,csvparser,dbparser,syslogformat,aflogstore,diskq,confighash,afsql" \
	--with-pidfile-dir=$(ZBS_PREFIX)/var/run \
	--with-module-dir=$(ZBS_PREFIX)/lib \
	--with-ivykis=system \
	--disable-mongodb

INSTALL:=./install-sh
RPATH=-Wl,-R/opt/syslog-ng/lib
OPTIMALIZATION=-O2

LDFLAGS+=-L$(PWD)/lib -L$(PWD)/lib/.lib
ifneq (,$(findstring debug,$(TGZ_BUILD_OPTS)))
  CONFIGURE_OPTS += --enable-debug
endif

ifneq (,$(findstring aix,$(ZBS_DIST)))
  # gcc's -O2 broken on aix...
  OPTIMALIZATION=
  # add -Wl,-bnoquiet for ld debugging
  RPATH=-Wl,-bnolibpath,-blibpath:/opt/syslog-ng/lib:/usr/lib:/lib,-bnoquiet
endif

ifneq (,$(findstring hpux,$(ZBS_DIST)))
  RPATH=-Wl,+b/opt/syslog-ng/lib
endif

ifneq (,$(findstring tru64,$(ZBS_DIST)))
  RPATH=-Wl,-rpath,/opt/syslog-ng/lib
endif

ifneq (,$(findstring linux-glibc2.1.3,$(ZBS_DIST)))
  CONFIGURE_OPTS+=--disable-ipv6
  # syslog-ng needs a C99 standtard compliant C compiler. GCC 2.95 is not compliant so we have to use a home built GCC 3.3 for this.
	CC=gcc-4.2
endif

ifneq (,$(findstring linux-glibc2.3.2,$(ZBS_DIST)))
	CC=gcc-4.2
endif


all: binary

binary: $(STAMPDIR)/stamp-setup $(STAMPDIR)/stamp-configure $(STAMPDIR)/stamp-build $(STAMPDIR)/stamp-install

setup: $(STAMPDIR)/stamp-setup
$(STAMPDIR)/stamp-setup:
	mkdir tgz2build/stamps || true
	touch $@

configure: $(STAMPDIR)/stamp-configure
$(STAMPDIR)/stamp-configure: $(STAMPDIR)/stamp-setup
	CC=$(CC) CFLAGS="$(OPTIMALIZATION) -g $(CFLAGS)" LDFLAGS="$(RPATH) $(LDFLAGS)" $(SHELL) ./configure $(CONFIGURE_OPTS)
	# 64 bit mode is a bit perky on solaris, we has to use the 64 bit LD_LIBRARY_PATH...
	if [ "$(ZBS_ARCH)" = "sparc64" ] && echo $(ZBS_DIST) | grep solaris >/dev/null; then \
		sed -e 's/\<\(LD_LIBRARY_PATH\)\>/\1_64/' libtool > libtool.$$ && \
		mv libtool.$$ libtool; \
	fi
	touch $@


build: $(STAMPDIR)/stamp-build
$(STAMPDIR)/stamp-build: $(STAMPDIR)/stamp-configure
	$(MAKE)
	# dynamic linker on HPUX B.11.11 doesn't support uninstalled libs, because
	# rpath overrides LD_LIBRARY_PATH. To allow the tests, we have to install
	# the various libs to /opt/syslog-ng/lib.
	if [ "$(ZBS_DIST)" = "hpux-11" ]; then \
		$(MAKE) install; \
	fi
	if [ "$(ZBS_DIST)" != "hpux-11v2" ] && [ "$(MACHTYPE)" != "i386-pc-solaris2.9" ]; then \
		$(MAKE) check || $(MAKE) check || $(MAKE) check; \
	fi
	touch $@


install:  $(STAMPDIR)/stamp-install
$(STAMPDIR)/stamp-install: $(STAMPDIR)/stamp-build
	rm -rf $(ZBS_STAGE_DIR)
	$(MAKE) install DESTDIR=$(ZBS_STAGE_DIR)
	$(INSTALL) -d -m 755 $(ZBS_STAGE_DIR)/$(ZBS_PREFIX)/etc
	
	# Store syslog-ng version
	. dist.conf; \
	(echo "VERSION=\"$$TECHNICAL_VERSION\""; echo "BROCHURE_VERSION=\"$$BROCHURE_VERSION\""; echo "EDITION=pe"; echo "BUILD_ARCH=$(ZBS_ARCH)"; echo "BUILD_DIST=$(ZBS_DIST)") > \
		$(ZBS_STAGE_DIR)/$(ZBS_PREFIX)/etc/install.dat
	    
	$(INSTALL) -d -m 755 $(ZBS_STAGE_DIR)/$(ZBS_PREFIX)/share/doc

	#Store syslog-ng build options. Has to declare the modulepaths, because
	# syslog-ng doesn't look for them in non-default paths.
	set -e ; \
	MODULEPATH=`find $(PWD)/modules -type d -name .libs`; \
	MODULEPATH=$(ZBS_PREFIX_LIB):$(ZBS_STAGING_DIR)/$(ZBS_PREFIX)/lib:`echo $$MODULEPATH | sed -e 's/ /:/g'`; \
	BUILDOPTS="$(ZBS_STAGE_DIR)/$(ZBS_PREFIX)/share/doc/buildopts"; \
	echo syslog-ng/syslog-ng -V --module-path "$$MODULEPATH"; \
	syslog-ng/syslog-ng -V --module-path "$$MODULEPATH" \
		| sed -n -e '/^Enable/p' -e '/^Available/p' \
		> $$BUILDOPTS; \
	if test ! -s $$BUILDOPTS; then \
		echo "Build options file '$$BUILDOPTS' has zero size. Please check your filter expression in tgz2build/rules."; \
		exit 1;\
	fi; \
	syslog-ng/syslog-ng -V --module-path "$$MODULEPATH"

	$(INSTALL) -d -m 755 $(ZBS_STAGE_DIR)/$(ZBS_PREFIX)/lib
	$(INSTALL) -m 644 -c AUTHORS $(ZBS_STAGE_DIR)/$(ZBS_PREFIX)/share/doc
	$(INSTALL) -d -m 755 $(ZBS_STAGE_DIR)/$(ZBS_PREFIX)/share/man
	$(INSTALL) -d -m 755 $(ZBS_STAGE_DIR)/$(ZBS_PREFIX)/share/man/man1
	$(INSTALL) -d -m 755 $(ZBS_STAGE_DIR)/$(ZBS_PREFIX)/share/man/man5
	$(INSTALL) -d -m 755 $(ZBS_STAGE_DIR)/$(ZBS_PREFIX)/share/man/man8
	$(INSTALL) -m 644 -c doc/man/pdbtool.1 $(ZBS_STAGE_DIR)/$(ZBS_PREFIX)/share/man/man1
	$(INSTALL) -m 644 -c doc/man/syslog-ng.8 $(ZBS_STAGE_DIR)/$(ZBS_PREFIX)/share/man/man8
	$(INSTALL) -m 644 -c doc/man/syslog-ng.conf.5 $(ZBS_STAGE_DIR)/$(ZBS_PREFIX)/share/man/man5

	$(INSTALL) -m 644 $(ZBS_SOURCE_DIR)/contrib/balabit-initscripts/init-functions $(ZBS_STAGE_DIR)/$(ZBS_PREFIX)/lib

	cd $(ZBS_SOURCE_DIR)/contrib && cp -R solaris-packaging balabit-initscripts/ && \
	tar cvf - balabit-initscripts selinux apparmor | (cd $(ZBS_STAGE_DIR)/$(ZBS_PREFIX)/share/doc/ && tar xf -)
	cd $(ZBS_SOURCE_DIR)
	rm -rf $(ZBS_STAGE_DIR)/$(ZBS_PREFIX)/share/doc/contrib/Makefile*
 
	touch $@ 

clean:
	rm -rf tgz2build/stamps || true
	rm -rf tgz2build/syslog-ng || true
	rm -rf tgz2build/staging || true
	$(MAKE) clean


