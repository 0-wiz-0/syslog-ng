1.9.7
	Sat, 03 Dec 2005 16:41:58 +0100

	* Reworded documentation on flush_lines & flush_timeout.
	* Fixed a possible segmentation fault on SIGHUP.
	* Fixed a timezone normalization problem.
	* Fixed Solaris support.
	* Added Debian packaging files.

1.9.6
	Sat, 15 Oct 2005 18:07:07 +0200

	* Added new options to control buffer flushing (flush_lines and
          flush_timeout, see the documentation for more details)
	* Fixes in local timezone detection, it should properly detect DSTs
          on Linux, Solaris and probably BSDs.
	* Fixed facility/priority filtering.
	* Fixed owner/group/permission setting on target files/directories.
	* Copied the contrib directory as found in 1.6.x to this tree.
	* TZ macro is now an alias of TZOFFSET, as I could not find a
          portable way to determine the string representation of any given
          timezone offset.
	* Added some more unit tests.

1.9.5
	Thu, 07 Jul 2005 11:35:25 +0200

	* Documentation updates on new options.
	* Fixed some timezone related problems cleaned up template specific
        timezones.
	* Fixed destination file permission setting problems.
	* Fixed use_time_recvd() handling, added a note to the documentation
	that this option is deprecated.
	* Fixed a destination file fd/memory leak for macro expanded files.
	* Fixed regexp match references in macro expansion. (e.g.
	"/var/log/$1")
	* Added two new macros: STAMP which formats a timestamp according to
	the ts_format() option, and WEEK which refers to the current week
	number.
	* Linking fixes to support more platforms.
	* Changed local hostname detection to use the value of use_fqdn()
        and actually use a fully expanded hostname if that is true.
	* Fixed some configuration file parsing problems which caused user
        identifiers to be recognized as keywords if they had a common
        prefix.
	* Always add fractions of a second if it was received from the
	application.
	* Fixed a gcc4 compatibility problem.

1.9.4
	Sun, 03 Apr 2005 12:51:55 +0200

	Fixed a macro expansion problem back in february, but did not 
	have time to release it until now. Most important changes in
	this release:

	* Added a fix for the macro expansion problem.
	* Added better error reporting to the configure script.


1.9.3
	Sat, 22 Jan 2005 01:38:07 +0100

	Things are going faster these days, a mere three weeks between
	releases. I've been running syslog-ng 1.9.2 on my notebook, and was
	lucky enough to find one or two major bugs this way, but after
	fixing those things are looking good. I've seen _no_ crashes, though
	sometimes syslog-ng blocked on reading an external fd, thus causing
	a system deadlock. Apart from bugfixes the most important changes
	are that documentation is readded and somewhat even updated with the
	new features. It was funny rereading the sentences I wrote a couple
	of years earlier, fixed some embarassing grammatical mistakes. Now,
	back to the topic, the most important changes in this release are:

	* Solaris portability fixes, one of the snapshots already compiled
	cleanly under Solaris, even though I did not test the release itself.
	* Link against the libraries sitting in /usr statically.
	* Fixed possible deadlock on internal messages, it was a bad idea to
	use a pipe internally, it is now replaced with a conventional queue,
	and a special GSource.
	* Fixed another possible deadlock caused by some fds not being set
	to non-blocking mode.
	* EAGAIN and EINTR was not correctly handled in all cases, fixed
	those.
	* Readded documentation, added new macros, template statements, new
	flags.


1.9.2
	Mon, 03 Jan 2005 22:03:02 +0100

	Well, it's been a long time since the last syslog-ng development
	release simply because I was involved in too many things in
	parallel. Good news that the release is actually quite usable,
	I've been running it on my laptop for a week now and I think it 
	is now time to gather some real life experience. 

	* Fixed a couple of memory leaks.
	* Fixed SIGHUP support.
	* Fixed program startup to make sure all important error information
        is logged.
	* Fixed program destinations by adding setsid() call after forking.
	* Fixed flow controlled log path support.
	* Added the possibility to use braces around macro references (like
        in '${MSG}\n')
	* Added macros missing from this branch added to 1.6.x since the
	last release (PRI and MSGONLY).

1.9.1
	Wed, 22 Jan 2003 12:13:44 +0100

	This release is still not intended for production use. It has a good
	number of new features and a couple of them may not be stable
	enough.

	New features:
	* template declarations, the possibility to define a template once
	  and refer to it
	* flow controlled log paths work, and they are also configurable
	* supports RFC3339 timestamps with second fractions and time zones,
	  time zone conversion & source time zone specification
	* MARK messages are generated
	* keep alive for connections as well as listeners
	* the ability to follow log files as they are written to
	* the possibility to mark parts of a message using standard '(' and
	  ')' regexp operators and refer to matches within templates (either
	  filenames or content)

	This program is still ALPHA.

1.9.0
	Thu,  9 May 2002 20:01:11 +0200

	This release is the first release of the new reimplementation of
	syslog-ng. I moved to using glib instead of libol, as glib is more
	mature and provides several nice & easy to use features.
	
	Here's a bunch of nice things about 1.9.0:
	* supports flow controlled log paths (still not possible to
	  configure it, but the code exists in the core)
	* better support for macros (macro support is moved out of affile,
	  thus any other drivers may use it)
	* more robust detection of closed destination sockets (a closed
	  channel is immediately detected, not at the first write) This
	  avoids losing a log message when the connection is broken.
	* supports respawning destination programs (should be used with care
	  to avoid DoS situations). This makes it easier to integrate third party
	  extensions to syslog-ng. (SQL backends, on-line log analysis etc)
	* performance improvements, instead of using linear lookup in linked
	  lists, I use hashtables everywhere.
	* the ability to define unparsed sources, makes it easier to
	  integrate things like Apache logs
	* many internal reorganizations to make it easier to implement things like 
	  hashed log files, SSL protected TCP sessions and so on.
	  
	Things still missing:
	* there are some new features with no configuration interface
	* internal messages always go to /dev/stderr
	* Sun's STREAMS is not yet supported
	
	1.9.0 is currently in an ALPHA state, it's been tested only on my
	development computer, and not real-life traffic.
