dnl Process this file with autoconf to produce a configure script.
AC_INIT(src/main.c)

dnl ***************************************************************************
dnl definitions

PACKAGE="syslog-ng"
VERSION="1.9.4"

dnl ***************************************************************************
dnl dependencies

GLIB_VERSION="2.2"
EVTLOG_VERSION="0.2"

dnl ***************************************************************************
dnl Initial setup

if test -r $srcdir/dist.conf; then
        # read defaults, dist.conf does not change
        # values for parameters that are already set
        source $srcdir/dist.conf
fi


AM_INIT_AUTOMAKE($PACKAGE, $VERSION, no-define)
if test -n "$SNAPSHOT_VERSION"; then
	VERSION=$VERSION+$SNAPSHOT_VERSION
fi

if test "x$prefix" = "xNONE"; then
        prefix=$ac_default_prefix
fi
	
AC_ARG_ENABLE(debug, 
              [  --enable-debug      Enable debugging code.])

AC_ARG_ENABLE(memtrace, 
              [  --enable-memtrace   Enable alternative leak debugging code.])
              
dnl AC_ARG_ENABLE(ssl,
dnl              [  --enable-ssl        Enable SSL support.])

AC_ARG_ENABLE(dynamic-linking,
              [  --enable-dynamic-linking        Link glib and eventlog dynamically instead of statically.])

AM_CONFIG_HEADER(config.h)

dnl Checks for programs.
AC_PROG_CC
AM_PROG_CC_STDC
AC_PROG_YACC
AM_PROG_LEX
AC_PROG_MAKE_SET
AC_PROG_RANLIB

dnl Checks for libraries.

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADER(dmalloc.h)
AC_CHECK_HEADERS(strings.h openssl/ssl.h getopt.h)

dnl Checks for typedefs, structures, and compiler characteristics.

dnl Checks for library functions.
AC_CHECK_LIB(door, door_create)
AC_CHECK_LIB(socket, socket)
AC_CHECK_LIB(nsl, gethostbyname)

AC_CHECK_FUNCS(strdup strtol inet_aton inet_ntoa getopt_long)

AC_CACHE_CHECK(for global timezone variable,
               blb_cv_c_global_timezone,
[AC_TRY_COMPILE([
#include <time.h>
],
[
int foo(void)
{
        timezone = 0;
}
],
blb_cv_c_global_timezone=yes,
blb_cv_c_global_timezone=no)])



if test "x$blb_cv_c_global_timezone" = "xyes"; then
        AC_DEFINE(HAVE_GLOBAL_TIMEZONE, 1, [have a global timezone variable])
fi

if test "x$enable_memtrace" = "xyes" ; then
	AC_CHECK_LIB(dl, dlsym)
fi

dnl export values as C defines

enable_value()
{
        if test "x$1" = "xyes" ; then
                echo 1
        else
                echo 0
        fi
}

AC_DEFINE_UNQUOTED(ENABLE_DEBUG, `enable_value $enable_debug`, [Enable debugging])
AC_DEFINE_UNQUOTED(ENABLE_MEM_TRACE, `enable_value $enable_memtrace`, [Enable memtrace])
AC_DEFINE_UNQUOTED(ENABLE_SSL, `enable_value $enable_ssl`, [Enable SSL support])

PKG_CHECK_MODULES(GLIB, glib-2.0,,)
PKG_CHECK_MODULES(EVTLOG, eventlog,,)

old_LIBS=$LIBS
LIBS="-Wl,-static $GLIB_LIBS -Wl,-call_shared"
AC_CACHE_CHECK(for static GLib libraries,
               blb_cv_static_glib,
[AC_TRY_LINK([], [
extern void g_hash_table_new(void);

int main()
{
  void (*fn)(void) = g_hash_table_new;

  return (int) fn;
}

],
blb_cv_static_glib=yes,
blb_cv_static_glib=no)])
LIBS=$old_LIBS

if test "x$enable_dynamic_linking" = "xno" -a "x$blb_cv_static_glib" = "xno"; then
	AC_MSG_ERROR([static GLib libraries not found, either link GLib dynamically using the --enable-dynamic-linking or install a static GLib])
fi

CFLAGS="${CFLAGS} -Wall -g"
DEPS_CPPFLAGS="$CPPFLAGS $GLIB_CFLAGS $EVTLOG_CFLAGS"
CPPFLAGS="$DEPS_CPPFLAGS -D_GNU_SOURCE"

if test "x$enable_dynamic_linking" = "xyes"; then
	DEPS_LIBS="$LIBS $LEXLIB $GLIB_LIBS $EVTLOG_LIBS"
else
	DEPS_LIBS="$LIBS -Wl,-static $LEXLIB $GLIB_LIBS $EVTLOG_LIBS -Wl,-call_shared"
fi
LIBS="$DEPS_LIBS"
YFLAGS="-d"

AC_DEFINE_UNQUOTED(PATH_SYSCONFDIR, "`eval echo $sysconfdir`", [sysconfdir])

AC_SUBST(DEPS_CPPFLAGS)
AC_SUBST(DEPS_LIBS)
AC_SUBST(YFLAGS)

AC_SUBST(SNAPSHOT_VERSION)
AC_SUBST(SOURCE_REVISION)

AC_OUTPUT(dist.conf
          Makefile 
	  src/Makefile 
	  doc/Makefile
          doc/docvars.xml
	  tests/Makefile 
          tests/unit/Makefile
          tests/functional/Makefile)
