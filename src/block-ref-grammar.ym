%code requires {

#include "block-ref-parser.h"

}

%name-prefix "block_ref_"
%lex-param {CfgLexer *lexer}
%parse-param {CfgLexer *lexer}
%parse-param {CfgBlockGeneratorArgs **result}


/* INCLUDE_DECLS */

%%

start
        : {
            *result = cfg_block_generator_args_new();
            cfg_lexer_push_context(lexer, LL_CONTEXT_BLOCK_REF, NULL, "block reference");
          }
          '(' block_args ')'                                    { cfg_lexer_pop_context(lexer); YYACCEPT; }
	;

block_args
        : block_arg block_args
        |
        ;

block_arg
        : LL_IDENTIFIER '(' string_or_number ')'                { cfg_block_generator_args_set_arg(*result, $1, $3); free($1); free($3); }
        ;

/* INCLUDE_RULES */

%%
